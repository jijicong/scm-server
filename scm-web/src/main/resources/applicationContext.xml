<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">


    <!-- 将多个配置文件读取到容器中，交给Spring管理 -->
    <bean id="config" class="org.trc.spring.TrPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:**/config.properties</value>
                <value>classpath:config/dev/scm-jdbc.properties</value>
                <value>classpath:config/comsumer-config.properties</value>
                <value>classpath:config/comsumer-JDconfig.properties</value>
            </list>
        </property>
        <property name="fileEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    <!-- redis配置 -->

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" /><!-- 向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。设为true，一个挂都不能用 -->
        <property name="minIdle" value="${redis.pool.minIdle}"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg name="poolConfig" ref="poolConfig" />
        <constructor-arg name="host" value="${mall.redis.host}"/>
        <constructor-arg name="port" value="${mall.redis.port}"/>
        <constructor-arg name="password" value="${mall.redis.password}"/>
        <constructor-arg name="database" value="${mall.redis.database}"/>
        <constructor-arg name="timeout" value="${mall.redis.timeout}"/>
    </bean>
    <!-- redis 配置结束 -->
    <!-- 本地提供服务 -->
   <!-- <import resource="classpath:zookeeper.xml"/>-->
    <import resource="classpath:consumer-beans.xml"/>
    <import resource="classpath:resource-context-web.xml"/>
    <import resource="comsumer-applicationContext.xml"/>
    <!-- 开启注解注入等 -->
    <context:annotation-config />
    <context:component-scan base-package="org.trc"/>
    <context:property-placeholder location="classpath:config/comsumer-JDconfig.properties" file-encoding="utf-8"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>